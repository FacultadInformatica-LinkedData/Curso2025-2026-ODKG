# -*- coding: utf-8 -*-
"""Task08.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1aQC_e_YY29ZZHrE76igSayaHQVEAXFxi

**Task 08: Completing missing data**
"""

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g1.parse(github_storage+"/rdf/data01.rdf", format="xml")
g2.parse(github_storage+"/rdf/data02.rdf", format="xml")

"""Tarea: lista todos los elementos de la clase Person en el primer grafo (data01.rdf) y completa los campos (given name, family name y email) que puedan faltar con los datos del segundo grafo (data02.rdf). Puedes usar consultas SPARQL o iterar el grafo, o ambas cosas."""

from rdflib import Namespace, RDF

# Namespaces
ns = Namespace("http://data.org#")
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")

# Iterar sobre todos los individuos de Person en g1
for person in g1.subjects(RDF.type, ns.Person):
    # Completar datos faltantes desde g2
    for prop in [vcard.Given, vcard.Family, vcard.EMAIL]:
        if (person, prop, None) not in g1:
            for o in g2.objects(person, prop):
                g1.add((person, prop, o))

# Imprimir resultados en tabla
print(f"{'Person':<25} {'Given':<10} {'Family':<10} {'Email'}")
print("-"*70)

for person in g1.subjects(RDF.type, ns.Person):
    given = [str(o) for o in g1.objects(person, vcard.Given)]
    family = [str(o) for o in g1.objects(person, vcard.Family)]
    email = [str(o) for o in g1.objects(person, vcard.EMAIL)]

    print(f"{str(person):<25} {given[0] if given else 'N/A':<10} {family[0] if family else 'N/A':<10} {email[0] if email else 'N/A'}")