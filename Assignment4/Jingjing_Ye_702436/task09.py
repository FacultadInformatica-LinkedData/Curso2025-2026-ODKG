# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/12DZH0RqSwvOo1ObWdrzR5Hrr0ElOY5hd

**Task 09: Data linking**
"""

github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

from rdflib import Namespace, RDF, OWL

# Namespaces
vcard = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
ns1 = Namespace("http://data.three.org#")
ns2 = Namespace("http://data.four.org#")

# Iterar individuos de g1
for person1 in g1.subjects(RDF.type, ns1.Person):
    given1 = [str(o) for o in g1.objects(person1, vcard.Given)]
    family1 = [str(o) for o in g1.objects(person1, vcard.Family)]
    if not given1 or not family1:
        continue

    # Iterar individuos de g2
    for person2 in g2.subjects(RDF.type, ns2.Person):
        given2 = [str(o) for o in g2.objects(person2, vcard.Given)]
        family2 = [str(o) for o in g2.objects(person2, vcard.Family)]
        if not given2 or not family2:
            continue

        # Comparar coincidencias exactas en Given y Family
        if given1[0] == given2[0] and family1[0] == family2[0]:
            g3.add((person1, OWL.sameAs, person2))
            print(f"Linked: {person1} owl:sameAs {person2}")

