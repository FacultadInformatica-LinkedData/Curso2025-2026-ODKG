# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1Q7f2q30c1EYqZlJmTSOU9LuMUA8ZhNJc

**Task 09: Data linking**
"""

# !pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

from rdflib.namespace import RDF

# Namespaces
EX1 = Namespace("http://data.three.org#")
EX2 = Namespace("http://data.four.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
OWL = Namespace("http://www.w3.org/2002/07/owl#")

# Grafos ya cargados: g1, g2, g3

# Función auxiliar para obtener un literal
def get_literal(g, subj, pred):
    val = list(g.objects(subj, pred))
    return val[0] if val else None

# Obtener todas las personas
persons_g1 = list(g1.subjects(RDF.type, EX1.Person))
persons_g2 = list(g2.subjects(RDF.type, EX2.Person))

# Comparar y enlazar con owl:sameAs
for person1 in persons_g1:
    given1 = get_literal(g1, person1, VCARD.Given)
    family1 = get_literal(g1, person1, VCARD.Family)
    if not given1 or not family1:
        continue
    for person2 in persons_g2:
        given2 = get_literal(g2, person2, VCARD.Given)
        family2 = get_literal(g2, person2, VCARD.Family)
        if given1 == given2 and family1 == family2:
            g3.add((person1, OWL.sameAs, person2))

# Mostrar resultados
print(g3.serialize(format="turtle").decode("utf-8") if hasattr(g3.serialize(format="turtle"), "decode") else g3.serialize(format="turtle"))