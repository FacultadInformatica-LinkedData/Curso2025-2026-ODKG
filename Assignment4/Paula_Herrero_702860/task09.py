# -*- coding: utf-8 -*-
"""Task09.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1E7SV6jXKeb3h1KTqOPMlJMBlJ2dab2qU

**Task 09: Data linking**
"""

#!pip install rdflib
github_storage = "https://raw.githubusercontent.com/FacultadInformatica-LinkedData/Curso2021-2022/master/Assignment4/course_materials/"

from rdflib import Graph, Namespace, Literal, URIRef
g1 = Graph()
g2 = Graph()
g3 = Graph()
g1.parse(github_storage+"rdf/data03.rdf", format="xml")
g2.parse(github_storage+"rdf/data04.rdf", format="xml")

"""Busca individuos en los dos grafos y enlázalos mediante la propiedad OWL:sameAs, inserta estas coincidencias en g3. Consideramos dos individuos iguales si tienen el mismo apodo y nombre de familia. Ten en cuenta que las URI no tienen por qué ser iguales para un mismo individuo en los dos grafos."""

from rdflib.namespace import RDF

# Namespaces
EX1 = Namespace("http://data.three.org#")
EX2 = Namespace("http://data.four.org#")
VCARD = Namespace("http://www.w3.org/2001/vcard-rdf/3.0#")
OWL = Namespace("http://www.w3.org/2002/07/owl#")

# Individuals in g1
persons1 = list(g1.subjects(RDF.type, EX1.Person))

for p in persons1:
  print(p)

# Individuals in g2
persons2 = list(g2.subjects(RDF.type, EX2.Person))

for p in persons2:
  print(p)

# Comparing individuals
for p1 in persons1:
  for p2 in persons2:
    if g1.value(p1, VCARD.Given) == g2.value(p2, VCARD.Given) and g1.value(p1, VCARD.Family) == g2.value(p2, VCARD.Family):
      g3.add((p1, OWL.sameAs, p2))

# Result
print(g3.serialize(format="ttl"))